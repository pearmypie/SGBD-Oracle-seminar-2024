-- 11/04/2024 Seminar 8

-- SET SERVEROUTPUT ON

DECLARE
    CH_SALARY EXCEPTION;
    PRAGMA EXCEPTION_INIT(CH_SALARY, -2290); -- NON-PREDEFINED EXCEPTION
    
    NO_EMP EXCEPTION;
    PRAGMA EXCEPTION_INIT(NO_EMP, -20301); -- INTERVAL FOR USER-DEFINED: -20999, 20000
    
    V_MESSAGE VARCHAR2(50);
    V_CODE NUMBER;
    
BEGIN
    UPDATE EMPLOYEES SET SALARY=0 WHERE EMPLOYEE_ID=20000;
    
    IF SQL%NOTFOUND THEN
        RAISE_APPLICATION_ERROR(-20301, 'NO EMPLOYEE FOUND');
        RAISE NO_EMP;
        RAISE NO_DATA_FOUND;
        
    END IF;
    
    EXCEPTION
        WHEN CH_SALARY
        THEN
            DBMS_OUTPUT.PUT_LINE('THE SALARY CANNOT BE LOWER THAN 0');
        
        WHEN NO_EMP
        THEN
            DBMS_OUTPUT.PUT_LINE('NO SALARY WAS UPDATED (USER-DEFINED EXCEPTION)');
            DBMS_OUTPUT.PUT_LINE(SQLERRM);
            DBMS_OUTPUT.PUT_LINE(SQLCODE);
            
            /* SQLERRM AND SQLCODE CAN'T BE USED IN SQL STATEMENTS */
            V_MESSAGE := SQLERRM;
            V_CODE := SQLCODE;
            
            INSERT INTO MY_ERROR VALUES(USER, SYSDATE, V_MESSAGE, V_CODE);

            COMMIT;
        
        WHEN NO_DATA_FOUND
        THEN
            DBMS_OUTPUT.PUT_LINE('NO SALARY WAS UPDATED (NON-PREDEFINED EXCEPTION)');
END;
/

CREATE TABLE MY_ERROR(
    USER_ID VARCHAR2(50),
    EXC_DATE DATE,
    EXC_MESSAGE VARCHAR2(50),
    EXC_CODE NUMBER
);
DESC MY_ERROR;
SELECT * FROM MY_ERROR;

CREATE OR REPLACE PROCEDURE UPDATE_SAL(P_EMPLOYEE_ID NUMBER, P_SALARY NUMBER) IS -- DECLARATION PART IS INCLUDED BETWEEN `IS` AND `BEGIN`
                                                                                 -- BY DEFAULT PARAMETERS ARE `IN`-PARAMETERS
    CH_SALARY EXCEPTION;
    PRAGMA EXCEPTION_INIT(CH_SALARY, -2290); -- NON-PREDEFINED EXCEPTION
    
    NO_EMP EXCEPTION;
    PRAGMA EXCEPTION_INIT(NO_EMP, -20301); -- INTERVAL FOR USER-DEFINED: -20999, 20000
    
    V_MESSAGE VARCHAR2(50);
    V_CODE NUMBER;
    
BEGIN
    UPDATE EMPLOYEES SET SALARY=0 WHERE EMPLOYEE_ID=P_EMPLOYEE_ID;
    
    IF SQL%NOTFOUND THEN
        RAISE_APPLICATION_ERROR(-20301, 'NO EMPLOYEE FOUND');
        RAISE NO_EMP;
        RAISE NO_DATA_FOUND;
        
    END IF;
    
    EXCEPTION
        WHEN CH_SALARY
        THEN
            DBMS_OUTPUT.PUT_LINE('THE SALARY CANNOT BE LOWER THAN 0');
        
        WHEN NO_EMP
        THEN
            DBMS_OUTPUT.PUT_LINE('NO SALARY WAS UPDATED (USER-DEFINED EXCEPTION)');
            DBMS_OUTPUT.PUT_LINE(SQLERRM);
            DBMS_OUTPUT.PUT_LINE(SQLCODE);
            
            /* SQLERRM AND SQLCODE CAN'T BE USED IN SQL STATEMENTS */
            V_MESSAGE := SQLERRM;
            V_CODE := SQLCODE;
            
            INSERT INTO MY_ERROR VALUES(USER, SYSDATE, V_MESSAGE, V_CODE);

            COMMIT;
        
        WHEN NO_DATA_FOUND
        THEN
            DBMS_OUTPUT.PUT_LINE('NO SALARY WAS UPDATED (NON-PREDEFINED EXCEPTION)');
END;
/

DECLARE
    V_N NUMBER;

BEGIN
    -- A FACUT SI `OUT` PARAMETERS DAR NU AM VAZUT LA TABLA
    UPDATE_SAL(1, 14);
END;
/

SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID = 1